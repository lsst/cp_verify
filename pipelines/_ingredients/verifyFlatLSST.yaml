description: cp_verify FLAT calibration verification (LSST ISR task).
imports:
  - location: $ANALYSIS_TOOLS_DIR/pipelines/cpCore.yaml
    include:
      - analyzeFlatCore
      - analyzeFlatDetMergeCore
tasks:
  verifyFlatIsr:
    class: lsst.ip.isr.IsrTaskLSST
    config:
      connections.ccdExposure: "raw"
      connections.outputExposure: "verifyFlatIsrExp"
      connections.outputBin1Exposure: "verifyFlatIsrExpBin8"
      connections.outputBin2Exposure: "verifyFlatIsrExpBin64"
      python: |
        from lsst.cp.pipe import configureIsrTaskLSSTForCalibrations

        configureIsrTaskLSSTForCalibrations(config)

        config.doCrosstalk = True
        config.crosstalk.doQuadraticCrosstalkCorrection = True
        config.doApplyGains = True
        config.doLinearize = True
        config.doDeferredCharge = True
        config.doBias = True
        config.doDark = True
        config.doDefect = True
        # TODO DM-50363: Investigate if this can be turned on, looking
        # at performance and quality of the BF correction.
        config.doBrighterFatter = False
        config.doFlat = True
        config.doInterpolate = True
        config.isrStats.doCopyCalibDistributionStatistics = True
        config.doBinnedExposures = True
        config.binFactor1 = 8
        config.binFactor2 = 64
  verifyFlatDet:
    class: lsst.cp.verify.CpVerifyFlatTask
    config:
      connections.inputExp: "verifyFlatIsrExp"
      connections.outputStats: "verifyFlatDetStats"
      connections.outputResults: "verifyFlatDetResults"
      useIsrStatistics: true
  verifyFlatDetMerge:
    class: lsst.cp.verify.CpVerifyDetMergeByFilterTask
    config:
      connections.inputStats: "verifyFlatDetStats"
      connections.inputResults: "verifyFlatDetResults"
      connections.outputStats: "verifyFlatDetMergeStats"
      connections.outputResults: "verifyFlatDetMergeResults"
      hasInputResults: true
      hasMatrixCatalog: false
      stageName: "flat"
  verifyFlatExp:
    class: lsst.cp.verify.CpVerifyFlatExpMergeTask
    config:
      connections.inputStats: "verifyFlatDetStats"
      connections.inputResults: "verifyFlatDetResults"
      connections.outputStats: "verifyFlatExpStats"
      connections.outputResults: "verifyFlatExpResults"
      hasInputResults: true
      hasMatrixCatalog: false
      stageName: "flat"
  verifyFlat:
    class: lsst.cp.verify.CpVerifyRunMergeByFilterTask
    config:
      connections.inputStats: "verifyFlatExpStats"
      connections.inputResults: "verifyFlatExpResults"
      connections.outputStats: "verifyFlatStats"
      connections.outputResults: "verifyFlatResults"
      hasInputResults: true
      hasMatrixCatalog: false
  analyzeFlatCore:
    class: lsst.analysis.tools.tasks.VerifyCalibAnalysisTaskByFilter
    config:
      connections.data: "verifyFlatResults"
      connections.outputName: "verifyFlatAnalysis"
  analyzeFlatDetMergeCore:
    class: lsst.analysis.tools.tasks.VerifyCalibDetectorTaskByFilter
    config:
      connections.data: "verifyFlatDetMergeResults"
      connections.outputName: "verifyFlatDetMergeAnalysis"
  mosaicFlatExp8:
    class: lsst.pipe.tasks.visualizeVisit.VisualizeMosaicExpTask
    config:
      connections.inputExps: "verifyFlatIsrExpBin8"
      connections.outputData: "verifyFlatResidual8"
      dimensions: "('instrument', 'exposure', 'physical_filter')"
      binning: 8
  mosaicFlatExp64:
    class: lsst.pipe.tasks.visualizeVisit.VisualizeMosaicExpTask
    config:
      connections.inputExps: "verifyFlatIsrExpBin64"
      connections.outputData: "verifyFlatResidual64"
      dimensions: "('instrument', 'exposure', 'physical_filter')"
      binning: 64
contracts:
  - verifyFlatIsr.binFactor1 == mosaicFlatExp8.binning
  - verifyFlatIsr.binFactor2 == mosaicFlatExp64.binning
  - verifyFlatDet.connections.inputExp == verifyFlatIsr.connections.outputExposure
  - verifyFlatExp.connections.inputStats == verifyFlatDet.connections.outputStats
  - verifyFlatExp.connections.inputResults == verifyFlatDet.connections.outputResults
  - verifyFlat.connections.inputStats == verifyFlatExp.connections.outputStats
  - verifyFlat.connections.inputResults == verifyFlatExp.connections.outputResults
  - analyzeFlatCore.connections.data == verifyFlat.connections.outputResults
  - analyzeFlatDetMergeCore.connections.data == verifyFlatDetMerge.connections.outputResults
  - mosaicFlatExp8.connections.inputExps == verifyFlatIsr.connections.outputBin1Exposure
  - mosaicFlatExp64.connections.inputExps == verifyFlatIsr.connections.outputBin2Exposure
