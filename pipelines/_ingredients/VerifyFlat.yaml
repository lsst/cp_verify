description: cp_verify FLAT calibration verification
tasks:
  verifyFlatApply:
    class: lsst.ip.isr.isrTask.IsrTask
    config:
      connections.ccdExposure: 'raw'
      connections.outputExposure: 'verifyFlatProc'
      # Disable downstream processing.
      doApplyGains: false
      doFringe: false
      doCalculateStatistics: true
      isrStats.doCopyCalibDistributionStatistics: true
      doBinnedExposures: true
      binFactor1: 8
      binFactor2: 64
  verifyFlatChip:
    class: lsst.cp.verify.CpVerifyFlatTask
    config:
      connections.inputExp: 'verifyFlatProc'
      connections.outputStats: 'verifyFlatDetStats'
      connections.outputResults: 'verifyFlatDetResults'
      useIsrStatistics: true
  verifyFlatExp:
    class: lsst.cp.verify.CpVerifyFlatExpMergeTask
    config:
      connections.inputStats: 'verifyFlatDetStats'
      connections.inputResults: 'verifyFlatDetResults'
      connections.outputStats: 'verifyFlatExpStats'
      connections.outputResults: 'verifyFlatExpResults'
      hasInputResults: true
      hasMatrixCatalog: false
      stageName: 'flat'
  verifyFlat:
    class: lsst.cp.verify.CpVerifyRunMergeByFilterTask
    config:
      connections.inputStats: 'verifyFlatExpStats'
      connections.inputResults: 'verifyFlatExpResults'
      connections.outputStats: 'verifyFlatStats'
      connections.outputResults: 'verifyFlatResults'
      hasInputResults: true
      hasMatrixCatalog: false
  mosaicExp1:
    class: lsst.pipe.tasks.visualizeVisit.VisualizeMosaicExpTask
    config:
      connections.inputExps: 'postIsrBin1'
      connections.outputData: 'verifyFlatResidual1'
      binning: 8
  mosaicExp2:
    class: lsst.pipe.tasks.visualizeVisit.VisualizeMosaicExpTask
    config:
      connections.inputExps: 'postIsrBin2'
      connections.outputData: 'verifyFlatResidual2'
      binning: 64
contracts:
  - verifyFlatApply.binFactor1 == mosaicExp1.binning
  - verifyFlatApply.binFactor2 == mosaicExp2.binning
