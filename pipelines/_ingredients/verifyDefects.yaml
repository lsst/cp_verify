description: cp_verify for Defects measured from combined calibrations.
tasks:
  verifyDefectsIsr:
    class: lsst.ip.isr.IsrTask
    config:
      connections.ccdExposure: "raw"
      connections.outputExposure: "verifyDefectsIsrExp"
      doDefect: true
      doCrosstalk: true
      doCalculateStatistics: true
      isrStats.doCopyCalibDistributionStatistics: true
  verifyDefectsChar:
    class: lsst.pipe.tasks.characterizeImage.CharacterizeImageTask
    config:
      connections.exposure: "verifyDefectsIsrExp"
      connections.characterized: "verifyDefectsIcExp"
      connections.sourceCat: "verifyDefectsIcSrc"
      doApCorr: false
      doDeblend: false
      doNormalizedCalibration: false
  verifyUncorrectedDefectsIsr:
    class: lsst.ip.isr.IsrTask
    config:
      connections.ccdExposure: "raw"
      connections.outputExposure: "verifyUncorrectedDefectsIsrExp"
      doDefect: false
      doCrosstalk: true
  verifyUncorrectedDefectsChar:
    class: lsst.pipe.tasks.characterizeImage.CharacterizeImageTask
    config:
      connections.exposure: "verifyUncorrectedDefectsIsrExp"
      connections.characterized: "verifyUncorrectedDefectsIcExp"
      connections.sourceCat: "verifyUncorrectedDefectsIcSrc"
      connections.backgroundModel: "verifyUncorrectedDefectsBackground"
      connections.outputSchema: "verifyUncorrectedDefects_schema"
      doApCorr: false
      doDeblend: false
      doMeasurePsf: false
      doNormalizedCalibration: false
  verifyDefectsDet:
    class: lsst.cp.verify.CpVerifyDefectsTask
    config:
      connections.inputExp: "verifyDefectsIcExp"
      connections.uncorrectedExp: "verifyUncorrectedDefectsIcExp"
      connections.inputCatalog: "verifyDefectsIcSrc"
      connections.uncorrectedCatalog: "verifyUncorrectedDefectsIcSrc"
      connections.outputStats: "verifyDefectsDetStats"
      connections.outputResults: "verifyDefectsDetResults"
      useIsrStatistics: true
      hasMatrixCatalog: false
  verifyDefectsExp:
    class: lsst.cp.verify.CpVerifyVisitExpMergeTask
    config:
      connections.inputStats: "verifyDefectsDetStats"
      connections.inputResults: "verifyDefectsDetResults"
      connections.outputStats: "verifyDefectsExpStats"
      connections.outputResults: "verifyDefectsExpResults"
      mergeDimension: "visit"
      hasInputResults: true
      hasMatrixCatalog: false
  verifyDefects:
    class: lsst.cp.verify.CpVerifyVisitRunMergeTask
    config:
      connections.inputStats: "verifyDefectsExpStats"
      connections.inputResults: "verifyDefectsExpResults"
      connections.outputStats: "verifyDefectsStats"
      connections.outputResults: "verifyDefectsResults"
      mergeDimension: "visit"
      hasInputResults: true
      hasMatrixCatalog: false
contracts:
  - verifyDefectsChar.connections.exposure == verifyDefectsIsr.connections.outputExposure
  - verifyUncorrectedDefectsChar.connections.exposure == verifyUncorrectedDefectsIsr.connections.outputExposure
  - verifyDefectsDet.connections.inputExp == verifyDefectsChar.connections.characterized
  - verifyDefectsDet.connections.uncorrectedExp == verifyUncorrectedDefectsChar.connections.characterized
  - verifyDefectsDet.connections.inputCatalog == verifyDefectsChar.connections.sourceCat
  - verifyDefectsDet.connections.uncorrectedCatalog == verifyUncorrectedDefectsChar.connections.sourceCat
  - verifyDefectsExp.connections.inputStats == verifyDefectsDet.connections.outputStats
  - verifyDefectsExp.connections.inputResults == verifyDefectsDet.connections.outputResults
  - verifyDefects.connections.inputStats == verifyDefectsExp.connections.outputStats
  - verifyDefects.connections.inputResults == verifyDefectsExp.connections.outputResults
